<templateSet group="api_test">
  <template name="help" value="##################################&#10;# help:帮助文档&#10;# demo:给出所有快捷键&#10;##################################&#10;&#10;##################################&#10;# demo_conf:配置模板&#10;# demo_import:导入模板&#10;# demo_api:接口调用模板&#10;# demo_tools:工具用法演示&#10;##################################&#10;&#10;##################################&#10;# demo_conf_api：接口url地址模板&#10;# demo_conf_db:数据库配置模板&#10;##################################&#10;&#10;##################################&#10;# demo_import_api：接口测试导入模板&#10;##################################&#10;&#10;##################################&#10;# demo_tools:工具包全部使用模板&#10;# demo_tools_excel:excel工具使用模板&#10;# demo_tools_mysql:mysql工具使用模板&#10;# demo_tools_random:random工具使用模板&#10;# demo_tools_log:log工具使用模板&#10;# demo_tools_shell:shell工具使用模板&#10;##################################&#10;&#10;##################################&#10;# demo_api_login：登陆接口模板（4种模板）&#10;# demo_api_login：登陆接口模板-常量&#10;# demo_api_login_var：登陆接口模板-变量&#10;# demo_api_login_param：登陆接口模板-参数化（数据分离）&#10;# demo_api_login_zuhe：登陆接口模板-组合使用（常量+变量+参数化）&#10;##################################&#10;" description="帮助手册" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="demo_init_env" value="# 在terminal控制台输入命令：&#10;# pip install --upgrade gy-api-tools" description="初始化API环境" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="demo_init_project" value="from tool import init_project" description="初始化API工程" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="demo_data_temp" value="'''&#10;自动生成 数字 20,80   #生成20到80之间的数字 例：56&#10;自动生成 字符串 2,5 中文数字字母特殊字符 xuepl        #生成以xuepl开头加上长度2到5位包含中文数字字母特殊字符的字符串，例子：xuepl我1&#10;自动生成 地址&#10;自动生成 姓名&#10;自动生成 手机号&#10;自动生成 邮箱&#10;自动生成 身份证号&#10;'''" description="自动生成数据样例" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="demo_test_tamp" value="def test_run(data):&#10;    data[&quot;username&quot;]=&quot;自动生成 字符串 10,11 字母数字 xuepl&quot;&#10;    feature = &quot;user&quot;  # 功能&#10;    story = 'login'  # 故事&#10;    title = None  # 标题&#10;    method = POST&#10;    url = &quot;/admin/login&quot;  # 接口地址&#10;    headers = None  # 请求头&#10;    params = None  # get请求数据&#10;    data1 = None  # post请求键值对数据&#10;    # post请求json数据，注意数据格式为字典或者为json串 为空写None&#10;    json_data = '''&#10;    {&#10;      &quot;password&quot;: &quot;自动生成 字符串 10,12 字母数字 xuepl&quot;,&#10;      &quot;username&quot;: &quot;${username}&quot;&#10;    }&#10;    '''&#10;    files = None  # post请求，上传文件&#10;    status_code = 200  # 响应状态码&#10;    expect = &quot;200&quot;  # 预期结果&#10;    # json path，参数类型为列表 根据jsonpath提取响应正文中的数据&#10;    json_path = [{&quot;token&quot;: '$.data.token'}]&#10;    # --------------------分界线，下边的不要修改-----------------------------------------&#10;    json_data1 = None&#10;    if (isinstance(json_data, str)):&#10;        json_data1 = json.loads(json_data)&#10;&#10;    d = {&#10;        &quot;method&quot;: method,&#10;        &quot;url&quot;: url,&#10;        &quot;data&quot;: data1,&#10;        &quot;params&quot;: params,&#10;        &quot;json&quot;: json_data1,&#10;        &quot;status_code&quot;: status_code,&#10;        &quot;expect&quot;: expect,&#10;        &quot;headers&quot;: headers,&#10;        &quot;json_path&quot;: json_path,&#10;        &quot;feature&quot;: feature,&#10;        &quot;story&quot;: story,&#10;        &quot;title&quot;: title,&#10;        &quot;files&quot;: files&#10;    }&#10;    request_tamp(d,data)" description="测试用例模板" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>